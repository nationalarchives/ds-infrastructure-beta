variable "instances" {}

module "postgres_instances" {
    source = "./postgres"

    vpc_id = data.aws_ssm_parameter.vpc_id.value

    source_ingress_cidrs = [
        data.aws_ssm_parameter.private_subnet_2a_cidr.value,
        data.aws_ssm_parameter.private_subnet_2b_cidr.value,
        data.aws_ssm_parameter.private_db_subnet_2a_cidr.value,
        data.aws_ssm_parameter.private_db_subnet_2b_cidr.value,
        data.aws_ssm_parameter.client_vpc_cidr.value,
    ]

    source_ami_id                      = data.aws_ami.private_beta_postgres_source_ami.id
    source_associate_public_ip_address = var.instances.source.associate_public_ip_address
    source_availability_zone           = "${var.region}${var.instances.source.availability_zone}"
    source_iam_instance_profile        = var.instances.source.iam_instance_profile
    source_instance_type               = var.instances.source.instance_type
    source_key_name                    = var.instances.source.key_name
    source_monitoring                  = var.instances.source.monitoring
    source_root_block_device           = var.instances.source.root_block_device
    source_subnet_id                   = data.aws_ssm_parameter.private_db_subnet_2a_id.value
    source_userdata                    = templatefile("${module.root}/templates/userdata-postgres-source.sh", {
        region     = var.region,
        volumeName = "postgres-shared-data-source",
        volume     = "/dev/sdf",
        drive      = "/dev/xvdf"
    })

    replica_ingress_cidrs = [
        data.aws_ssm_parameter.private_subnet_2a_cidr.value,
        data.aws_ssm_parameter.private_subnet_2b_cidr.value,
        data.aws_ssm_parameter.private_db_subnet_2a_cidr.value,
        data.aws_ssm_parameter.private_db_subnet_2b_cidr.value,
        data.aws_ssm_parameter.client_vpc_cidr.value,
    ]

    replica_ami_id                      = data.aws_ami.private_beta_postgres_replica_ami.id
    replica_associate_public_ip_address = var.instances.replica.associate_public_ip_address
    replica_availability_zone           = "${var.region}${var.instances.replica.availability_zone}"
    replica_iam_instance_profile        = var.instances.replica.iam_instance_profile
    replica_instance_type               = var.instances.replica.instance_type
    replica_key_name                    = var.instances.replica.key_name
    replica_monitoring                  = var.instances.replica.monitoring
    replica_root_block_device           = var.instances.replica.root_block_device
    replica_subnet_id                   = data.aws_ssm_parameter.private_db_subnet_2a_id.value
    replica_userdata                    = templatefile("${module.root}/templates/userdata-postgres-replica.sh", {
        region     = var.region,
        volumeName = "postgres-shared-data-replica",
        volume     = "/dev/sdf",
        drive      = "/dev/xvdf"
    })

    tags = local.tags
}
